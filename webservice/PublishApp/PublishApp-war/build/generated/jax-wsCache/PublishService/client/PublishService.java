
package client;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2.payara-p2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PublishService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PublishService {


    /**
     * 
     * @return
     *     returns java.util.List<client.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSubscriptions", targetNamespace = "http://service/", className = "client.GetAllSubscriptions")
    @ResponseWrapper(localName = "getAllSubscriptionsResponse", targetNamespace = "http://service/", className = "client.GetAllSubscriptionsResponse")
    @Action(input = "http://service/PublishService/getAllSubscriptionsRequest", output = "http://service/PublishService/getAllSubscriptionsResponse")
    public List<Subscription> getAllSubscriptions();

    /**
     * 
     * @param fname
     * @param lname
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createCustomer", targetNamespace = "http://service/", className = "client.CreateCustomer")
    @Action(input = "http://service/PublishService/createCustomer")
    public void createCustomer(
        @WebParam(name = "fname", targetNamespace = "")
        String fname,
        @WebParam(name = "lname", targetNamespace = "")
        String lname);

    /**
     * 
     * @param fname
     * @param lname
     * @param custId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateCustomer", targetNamespace = "http://service/", className = "client.UpdateCustomer")
    @Action(input = "http://service/PublishService/updateCustomer")
    public void updateCustomer(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId,
        @WebParam(name = "fname", targetNamespace = "")
        String fname,
        @WebParam(name = "lname", targetNamespace = "")
        String lname);

    /**
     * 
     * @param custId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeCustomer", targetNamespace = "http://service/", className = "client.RemoveCustomer")
    @Action(input = "http://service/PublishService/removeCustomer")
    public void removeCustomer(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId);

    /**
     * 
     * @param zip
     * @param city
     * @param street
     * @param custId
     * @param state
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addAddressToCustomer", targetNamespace = "http://service/", className = "client.AddAddressToCustomer")
    @Action(input = "http://service/PublishService/addAddressToCustomer")
    public void addAddressToCustomer(
        @WebParam(name = "street", targetNamespace = "")
        String street,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "zip", targetNamespace = "")
        String zip,
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId);

    /**
     * 
     * @param custId
     * @param addressId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeAddressFromCustomer", targetNamespace = "http://service/", className = "client.RemoveAddressFromCustomer")
    @Action(input = "http://service/PublishService/removeAddressFromCustomer")
    public void removeAddressFromCustomer(
        @WebParam(name = "addressId", targetNamespace = "")
        Integer addressId,
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId);

    /**
     * 
     * @param custId
     * @param ids
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addSubscriptionsToCustomers", targetNamespace = "http://service/", className = "client.AddSubscriptionsToCustomers")
    @Action(input = "http://service/PublishService/addSubscriptionsToCustomers")
    public void addSubscriptionsToCustomers(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId,
        @WebParam(name = "ids", targetNamespace = "")
        List<Integer> ids);

    /**
     * 
     * @param custId
     * @param ids
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeSubscriptionsFromCustomers", targetNamespace = "http://service/", className = "client.RemoveSubscriptionsFromCustomers")
    @Action(input = "http://service/PublishService/removeSubscriptionsFromCustomers")
    public void removeSubscriptionsFromCustomers(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId,
        @WebParam(name = "ids", targetNamespace = "")
        List<Integer> ids);

    /**
     * 
     * @param title
     * @param type
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addNewSubscription", targetNamespace = "http://service/", className = "client.AddNewSubscription")
    @Action(input = "http://service/PublishService/addNewSubscription")
    public void addNewSubscription(
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @param subId
     * @param title
     * @param type
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateSubscription", targetNamespace = "http://service/", className = "client.UpdateSubscription")
    @Action(input = "http://service/PublishService/updateSubscription")
    public void updateSubscription(
        @WebParam(name = "subId", targetNamespace = "")
        Integer subId,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "type", targetNamespace = "")
        String type);

    /**
     * 
     * @param subId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeSubscription", targetNamespace = "http://service/", className = "client.RemoveSubscription")
    @Action(input = "http://service/PublishService/removeSubscription")
    public void removeSubscription(
        @WebParam(name = "subId", targetNamespace = "")
        Integer subId);

    /**
     * 
     * @param title
     * @return
     *     returns java.util.List<client.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findSubscriptionsByTitle", targetNamespace = "http://service/", className = "client.FindSubscriptionsByTitle")
    @ResponseWrapper(localName = "findSubscriptionsByTitleResponse", targetNamespace = "http://service/", className = "client.FindSubscriptionsByTitleResponse")
    @Action(input = "http://service/PublishService/findSubscriptionsByTitleRequest", output = "http://service/PublishService/findSubscriptionsByTitleResponse")
    public List<Subscription> findSubscriptionsByTitle(
        @WebParam(name = "title", targetNamespace = "")
        String title);

    /**
     * 
     * @return
     *     returns java.util.List<client.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCustomers", targetNamespace = "http://service/", className = "client.GetAllCustomers")
    @ResponseWrapper(localName = "getAllCustomersResponse", targetNamespace = "http://service/", className = "client.GetAllCustomersResponse")
    @Action(input = "http://service/PublishService/getAllCustomersRequest", output = "http://service/PublishService/getAllCustomersResponse")
    public List<Customer> getAllCustomers();

    /**
     * 
     * @param fname
     * @return
     *     returns java.util.List<client.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomersByFirstName", targetNamespace = "http://service/", className = "client.GetCustomersByFirstName")
    @ResponseWrapper(localName = "getCustomersByFirstNameResponse", targetNamespace = "http://service/", className = "client.GetCustomersByFirstNameResponse")
    @Action(input = "http://service/PublishService/getCustomersByFirstNameRequest", output = "http://service/PublishService/getCustomersByFirstNameResponse")
    public List<Customer> getCustomersByFirstName(
        @WebParam(name = "fname", targetNamespace = "")
        String fname);

    /**
     * 
     * @param lname
     * @return
     *     returns java.util.List<client.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomersByLastName", targetNamespace = "http://service/", className = "client.GetCustomersByLastName")
    @ResponseWrapper(localName = "getCustomersByLastNameResponse", targetNamespace = "http://service/", className = "client.GetCustomersByLastNameResponse")
    @Action(input = "http://service/PublishService/getCustomersByLastNameRequest", output = "http://service/PublishService/getCustomersByLastNameResponse")
    public List<Customer> getCustomersByLastName(
        @WebParam(name = "lname", targetNamespace = "")
        String lname);

    /**
     * 
     * @param custId
     * @return
     *     returns java.util.List<client.Address>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAddressesOfCustomer", targetNamespace = "http://service/", className = "client.GetAddressesOfCustomer")
    @ResponseWrapper(localName = "getAddressesOfCustomerResponse", targetNamespace = "http://service/", className = "client.GetAddressesOfCustomerResponse")
    @Action(input = "http://service/PublishService/getAddressesOfCustomerRequest", output = "http://service/PublishService/getAddressesOfCustomerResponse")
    public List<Address> getAddressesOfCustomer(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId);

    /**
     * 
     * @param custId
     * @return
     *     returns java.util.List<client.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsOfCustomer", targetNamespace = "http://service/", className = "client.GetSubscriptionsOfCustomer")
    @ResponseWrapper(localName = "getSubscriptionsOfCustomerResponse", targetNamespace = "http://service/", className = "client.GetSubscriptionsOfCustomerResponse")
    @Action(input = "http://service/PublishService/getSubscriptionsOfCustomerRequest", output = "http://service/PublishService/getSubscriptionsOfCustomerResponse")
    public List<Subscription> getSubscriptionsOfCustomer(
        @WebParam(name = "custId", targetNamespace = "")
        Integer custId);

    /**
     * 
     * @param subId
     * @return
     *     returns java.util.List<client.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCustomersOfTitle", targetNamespace = "http://service/", className = "client.GetCustomersOfTitle")
    @ResponseWrapper(localName = "getCustomersOfTitleResponse", targetNamespace = "http://service/", className = "client.GetCustomersOfTitleResponse")
    @Action(input = "http://service/PublishService/getCustomersOfTitleRequest", output = "http://service/PublishService/getCustomersOfTitleResponse")
    public List<Customer> getCustomersOfTitle(
        @WebParam(name = "subId", targetNamespace = "")
        Integer subId);

}
